{
  "_args": [
    [
      {
        "raw": "streamify@~0.2.3",
        "scope": null,
        "escapedName": "streamify",
        "name": "streamify",
        "rawSpec": "~0.2.3",
        "spec": ">=0.2.3 <0.3.0",
        "type": "range"
      },
      "/Users/DanBurkhardt/Git/TopicsInSWEng/Project/VRPlus/node_modules/youtube-dl"
    ]
  ],
  "_from": "streamify@>=0.2.3 <0.3.0",
  "_id": "streamify@0.2.8",
  "_inCache": true,
  "_location": "/streamify",
  "_nodeVersion": "7.7.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/streamify-0.2.8.tgz_1488428365561_0.5776682873256505"
  },
  "_npmUser": {
    "name": "fent",
    "email": "roly426@gmail.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "streamify@~0.2.3",
    "scope": null,
    "escapedName": "streamify",
    "name": "streamify",
    "rawSpec": "~0.2.3",
    "spec": ">=0.2.3 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/youtube-dl"
  ],
  "_resolved": "https://registry.npmjs.org/streamify/-/streamify-0.2.8.tgz",
  "_shasum": "aa8133ecf41f72073dc956111ef23bae1cd0fbad",
  "_shrinkwrap": null,
  "_spec": "streamify@~0.2.3",
  "_where": "/Users/DanBurkhardt/Git/TopicsInSWEng/Project/VRPlus/node_modules/youtube-dl",
  "author": {
    "name": "Roly Fentanes",
    "url": "https://github.com/fent"
  },
  "bugs": {
    "url": "https://github.com/fent/node-streamify/issues"
  },
  "dependencies": {
    "hashish": "~0.0.4"
  },
  "description": "Streamify helps you easily provide a streaming interface for code.",
  "devDependencies": {
    "istanbul": "*",
    "mocha": "*",
    "stream-equal": "~1.0.0"
  },
  "directories": {
    "lib": "./lib"
  },
  "dist": {
    "shasum": "aa8133ecf41f72073dc956111ef23bae1cd0fbad",
    "tarball": "https://registry.npmjs.org/streamify/-/streamify-0.2.8.tgz"
  },
  "engines": {
    "node": ">=0.12"
  },
  "gitHead": "8384098b182bdc425624e0c10a181aaad8ca7663",
  "homepage": "https://github.com/fent/node-streamify#readme",
  "keywords": [
    "stream",
    "input",
    "output",
    "api"
  ],
  "license": "MIT",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "fent",
      "email": "roly426@gmail.com"
    }
  ],
  "name": "streamify",
  "optionalDependencies": {},
  "readme": "# node-streamify\n\nStreamify helps you easily provide a streaming interface for your code.\n\n[![Build Status](https://secure.travis-ci.org/fent/node-streamify.svg)](http://travis-ci.org/fent/node-streamify)\n[![Dependency Status](https://david-dm.org/fent/node-streamify.svg)](https://david-dm.org/fent/node-streamify)\n[![codecov](https://codecov.io/gh/fent/node-streamify/branch/master/graph/badge.svg)](https://codecov.io/gh/fent/node-streamify)\n\n# Usage\n\n```js\nvar streamify = require('streamify');\nvar request   = require('request');\n\nexports.doSomething = function doSomething() {\n  var stream = streamify();\n\n  request(url1, function(err, res, body) {\n    // do something with `body`\n\n    // once the actual stream you want to return is ready,\n    // call `stream.resolve()`\n    stream.resolve(request(url2));\n  });\n\n  // your function can return back a stream!!\n  return stream;\n}\n\n// because `doSomething()` returns a stream, it can be piped\nexports.doSomething().pipe(anotherStream);\n```\n\n\n# API\n### streamify([options])\n\nReturns an instance of a stream. `options` can be\n\n* `superCtor` - The object from which it inherits. Defaults to `require('stream').Stream`. Sometimes you may want to use this if your stream might be checked with the `instanceof` operator against objects such as `http.ServerResponse`.\n* `readable` - Defaults to `true`.\n* `writable` - Defaults to `true`.\n\n### Stream#resolve(stream)\n\nMust be called only once when the actual stream you are proxying to becomes available after an asynchronous operation.\n\n### Stream#unresolve()\n\nCan be used to unbind a a resolved stream to later call `resolve()` again.\n\n### Stream#addSource(stream)\n\nAdd a source readable stream.\n\n### Stream#removeSource()\n\nRemove previously added source stream.\n\n### Stream#addDest(stream)\n\nAdd a destination writable stream.\n\n### Stream#removeDest()\n\nRemove a previously added destination stream.\n\n\n# Install\n\n    npm install streamify\n\n\n# Tests\nTests are written with [mocha](http://visionmedia.github.com/mocha/)\n\n```bash\nnpm test\n```\n\n# License\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/fent/node-streamify.git"
  },
  "scripts": {
    "test": "istanbul cover node_modules/.bin/_mocha -- test/*-test.js"
  },
  "version": "0.2.8"
}
